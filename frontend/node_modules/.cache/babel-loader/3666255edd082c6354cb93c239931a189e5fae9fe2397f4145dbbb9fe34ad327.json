{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Downloads\\\\AI_Document_Analyzer (2)\\\\frontend\\\\src\\\\components\\\\AnimatedBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { useTheme } from '../context/ThemeContext';\nimport './AnimatedBackground.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedBackground = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const {\n    isDarkMode\n  } = useTheme();\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let darkParticles = [];\n    let lightParticles = [];\n    let laserLines = [];\n    let animationId;\n    let isTransitioning = false;\n    let previousMode = isDarkMode;\n    let fadeProgress = 0;\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n\n    // Dark mode: White floating balls\n    class DarkParticle {\n      constructor() {\n        this.x = Math.random() * canvas.width;\n        this.y = Math.random() * canvas.height;\n        this.size = Math.random() * 2 + 1;\n        this.speedX = Math.random() * 1 - 0.5;\n        this.speedY = Math.random() * 1 - 0.5;\n        this.opacity = Math.random() * 0.5 + 0.3;\n      }\n      update() {\n        this.x += this.speedX;\n        this.y += this.speedY;\n        if (this.x > canvas.width || this.x < 0) this.speedX *= -1;\n        if (this.y > canvas.height || this.y < 0) this.speedY *= -1;\n      }\n      draw() {\n        ctx.fillStyle = `rgba(255, 255, 255, ${this.opacity})`;\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n        ctx.fill();\n      }\n    }\n\n    // Light mode: Gradient orbs\n    class LightParticle {\n      constructor() {\n        this.x = Math.random() * canvas.width;\n        this.y = Math.random() * canvas.height;\n        this.size = Math.random() * 80 + 40;\n        this.speedX = Math.random() * 0.5 - 0.25;\n        this.speedY = Math.random() * 0.5 - 0.25;\n        this.opacity = Math.random() * 0.1 + 0.05;\n        this.hue = Math.random() * 30 + 320; // Pinkish hues\n      }\n      update() {\n        this.x += this.speedX;\n        this.y += this.speedY;\n        if (this.x > canvas.width + this.size) this.x = -this.size;\n        if (this.x < -this.size) this.x = canvas.width + this.size;\n        if (this.y > canvas.height + this.size) this.y = -this.size;\n        if (this.y < -this.size) this.y = canvas.height + this.size;\n      }\n      draw() {\n        const gradient = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.size);\n        gradient.addColorStop(0, `hsla(${this.hue}, 80%, 90%, ${this.opacity})`);\n        gradient.addColorStop(1, `hsla(${this.hue}, 80%, 90%, 0)`);\n        ctx.fillStyle = gradient;\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n        ctx.fill();\n      }\n    }\n\n    // Light mode: Laser light lines\n    class LaserLine {\n      constructor() {\n        this.x1 = Math.random() * canvas.width;\n        this.y1 = Math.random() * canvas.height;\n        this.x2 = Math.random() * canvas.width;\n        this.y2 = Math.random() * canvas.height;\n        this.speedX1 = (Math.random() - 0.5) * 2;\n        this.speedY1 = (Math.random() - 0.5) * 2;\n        this.speedX2 = (Math.random() - 0.5) * 2;\n        this.speedY2 = (Math.random() - 0.5) * 2;\n        this.opacity = Math.random() * 0.3 + 0.1;\n        this.width = Math.random() * 3 + 1;\n        this.pulse = 0;\n        this.pulseSpeed = Math.random() * 0.05 + 0.02;\n      }\n      update() {\n        this.x1 += this.speedX1;\n        this.y1 += this.speedY1;\n        this.x2 += this.speedX2;\n        this.y2 += this.speedY2;\n        this.pulse += this.pulseSpeed;\n        if (this.x1 > canvas.width || this.x1 < 0) this.speedX1 *= -1;\n        if (this.y1 > canvas.height || this.y1 < 0) this.speedY1 *= -1;\n        if (this.x2 > canvas.width || this.x2 < 0) this.speedX2 *= -1;\n        if (this.y2 > canvas.height || this.y2 < 0) this.speedY2 *= -1;\n      }\n      draw() {\n        const pulseOpacity = this.opacity * (0.5 + 0.5 * Math.sin(this.pulse));\n        const gradient = ctx.createLinearGradient(this.x1, this.y1, this.x2, this.y2);\n        gradient.addColorStop(0, `rgba(255, 182, 193, ${pulseOpacity})`);\n        gradient.addColorStop(0.5, `rgba(255, 192, 203, ${pulseOpacity * 1.5})`);\n        gradient.addColorStop(1, `rgba(255, 182, 193, ${pulseOpacity})`);\n        ctx.strokeStyle = gradient;\n        ctx.lineWidth = this.width;\n        ctx.lineCap = 'round';\n        ctx.beginPath();\n        ctx.moveTo(this.x1, this.y1);\n        ctx.lineTo(this.x2, this.y2);\n        ctx.stroke();\n        ctx.shadowColor = 'rgba(255, 182, 193, 0.8)';\n        ctx.shadowBlur = 10;\n        ctx.stroke();\n        ctx.shadowBlur = 0;\n      }\n    }\n    const startTransition = () => {\n      isTransitioning = true;\n      fadeProgress = 0;\n\n      // Smooth fade transition (slower for light mode)\n      const fadeStep = isDarkMode ? 0.02 : 0.012;\n      const fadeOut = () => {\n        fadeProgress += fadeStep;\n        if (fadeProgress < 1) {\n          requestAnimationFrame(fadeOut);\n        } else {\n          // Switch modes after fade out\n          if (isDarkMode) {\n            // Switch to dark mode\n            darkParticles = [];\n            for (let i = 0; i < 20; i++) {\n              darkParticles.push(new DarkParticle());\n            }\n            lightParticles = [];\n            laserLines = [];\n          } else {\n            // Switch to light mode\n            lightParticles = [];\n            for (let i = 0; i < 8; i++) {\n              lightParticles.push(new LightParticle());\n            }\n            laserLines = [];\n            for (let i = 0; i < 12; i++) {\n              laserLines.push(new LaserLine());\n            }\n            darkParticles = [];\n          }\n\n          // Fade in new mode\n          fadeProgress = 1;\n          const fadeIn = () => {\n            fadeProgress -= fadeStep;\n            if (fadeProgress > 0) {\n              requestAnimationFrame(fadeIn);\n            } else {\n              isTransitioning = false;\n              fadeProgress = 0;\n            }\n          };\n          fadeIn();\n        }\n      };\n      fadeOut();\n    };\n    const init = () => {\n      darkParticles = [];\n      lightParticles = [];\n      laserLines = [];\n      if (isDarkMode) {\n        // Dark mode: 20 white balls\n        for (let i = 0; i < 20; i++) {\n          darkParticles.push(new DarkParticle());\n        }\n      } else {\n        // Light mode: 8 pinkish orbs + 12 laser lines\n        for (let i = 0; i < 8; i++) {\n          lightParticles.push(new LightParticle());\n        }\n        for (let i = 0; i < 12; i++) {\n          laserLines.push(new LaserLine());\n        }\n      }\n    };\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      if (isDarkMode) {\n        // Dark mode background\n        ctx.fillStyle = '#0f172a';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        // Draw dark particles with fade effect\n        if (isTransitioning && fadeProgress < 0.5) {\n          // Fading out\n          const opacity = 1 - fadeProgress * 2;\n          ctx.globalAlpha = opacity;\n        } else if (isTransitioning && fadeProgress > 0.5) {\n          // Fading in\n          const opacity = (fadeProgress - 0.5) * 2;\n          ctx.globalAlpha = opacity;\n        }\n        for (let i = 0; i < darkParticles.length; i++) {\n          darkParticles[i].update();\n          darkParticles[i].draw();\n        }\n      } else {\n        // Light mode background: soft pinkish pastel gradient\n        const gradient = ctx.createLinearGradient(0, 0, canvas.width, canvas.height);\n        gradient.addColorStop(0, '#fbeffb'); // very light pink\n        gradient.addColorStop(0.3, '#f8e1f4'); // pastel pink\n        gradient.addColorStop(0.7, '#f7e6f8'); // soft pink\n        gradient.addColorStop(1, '#fbeffb'); // very light pink\n        ctx.fillStyle = gradient;\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        // Draw light particles and lasers with fade effect\n        if (isTransitioning && fadeProgress < 0.5) {\n          // Fading out\n          const opacity = 1 - fadeProgress * 2;\n          ctx.globalAlpha = opacity;\n        } else if (isTransitioning && fadeProgress > 0.5) {\n          // Fading in\n          const opacity = (fadeProgress - 0.5) * 2;\n          ctx.globalAlpha = opacity;\n        }\n        for (let i = 0; i < lightParticles.length; i++) {\n          lightParticles[i].update();\n          lightParticles[i].draw();\n        }\n        for (let i = 0; i < laserLines.length; i++) {\n          laserLines[i].update();\n          laserLines[i].draw();\n        }\n      }\n      ctx.globalAlpha = 1; // Reset alpha\n      animationId = requestAnimationFrame(animate);\n    };\n\n    // Check if mode changed and start smooth transition\n    if (previousMode !== isDarkMode) {\n      startTransition();\n      previousMode = isDarkMode;\n    }\n    resizeCanvas();\n    init();\n    animate();\n    window.addEventListener('resize', () => {\n      resizeCanvas();\n      init();\n    });\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      if (animationId) {\n        cancelAnimationFrame(animationId);\n      }\n    };\n  }, [isDarkMode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"animated-background-container\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"animated-background-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimatedBackground, \"Bo/VC0IyicBt36DWOzMj5ksK4xc=\", false, function () {\n  return [useTheme];\n});\n_c = AnimatedBackground;\nexport default AnimatedBackground;\nvar _c;\n$RefreshReg$(_c, \"AnimatedBackground\");","map":{"version":3,"names":["React","useEffect","useRef","useTheme","jsxDEV","_jsxDEV","AnimatedBackground","_s","canvasRef","isDarkMode","canvas","current","ctx","getContext","darkParticles","lightParticles","laserLines","animationId","isTransitioning","previousMode","fadeProgress","resizeCanvas","width","window","innerWidth","height","innerHeight","DarkParticle","constructor","x","Math","random","y","size","speedX","speedY","opacity","update","draw","fillStyle","beginPath","arc","PI","fill","LightParticle","hue","gradient","createRadialGradient","addColorStop","LaserLine","x1","y1","x2","y2","speedX1","speedY1","speedX2","speedY2","pulse","pulseSpeed","pulseOpacity","sin","createLinearGradient","strokeStyle","lineWidth","lineCap","moveTo","lineTo","stroke","shadowColor","shadowBlur","startTransition","fadeStep","fadeOut","requestAnimationFrame","i","push","fadeIn","init","animate","clearRect","fillRect","globalAlpha","length","addEventListener","removeEventListener","cancelAnimationFrame","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Downloads/AI_Document_Analyzer (2)/frontend/src/components/AnimatedBackground.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { useTheme } from '../context/ThemeContext';\r\nimport './AnimatedBackground.css';\r\n\r\nconst AnimatedBackground = () => {\r\n  const canvasRef = useRef(null);\r\n  const { isDarkMode } = useTheme();\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    let darkParticles = [];\r\n    let lightParticles = [];\r\n    let laserLines = [];\r\n    let animationId;\r\n    let isTransitioning = false;\r\n    let previousMode = isDarkMode;\r\n    let fadeProgress = 0;\r\n    \r\n    const resizeCanvas = () => {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n    };\r\n\r\n    // Dark mode: White floating balls\r\n    class DarkParticle {\r\n      constructor() {\r\n        this.x = Math.random() * canvas.width;\r\n        this.y = Math.random() * canvas.height;\r\n        this.size = Math.random() * 2 + 1;\r\n        this.speedX = Math.random() * 1 - 0.5;\r\n        this.speedY = Math.random() * 1 - 0.5;\r\n        this.opacity = Math.random() * 0.5 + 0.3;\r\n      }\r\n      update() {\r\n        this.x += this.speedX;\r\n        this.y += this.speedY;\r\n\r\n        if (this.x > canvas.width || this.x < 0) this.speedX *= -1;\r\n        if (this.y > canvas.height || this.y < 0) this.speedY *= -1;\r\n      }\r\n      draw() {\r\n        ctx.fillStyle = `rgba(255, 255, 255, ${this.opacity})`;\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n        ctx.fill();\r\n      }\r\n    }\r\n\r\n    // Light mode: Gradient orbs\r\n    class LightParticle {\r\n      constructor() {\r\n        this.x = Math.random() * canvas.width;\r\n        this.y = Math.random() * canvas.height;\r\n        this.size = Math.random() * 80 + 40;\r\n        this.speedX = Math.random() * 0.5 - 0.25;\r\n        this.speedY = Math.random() * 0.5 - 0.25;\r\n        this.opacity = Math.random() * 0.1 + 0.05;\r\n        this.hue = Math.random() * 30 + 320; // Pinkish hues\r\n      }\r\n      update() {\r\n        this.x += this.speedX;\r\n        this.y += this.speedY;\r\n\r\n        if (this.x > canvas.width + this.size) this.x = -this.size;\r\n        if (this.x < -this.size) this.x = canvas.width + this.size;\r\n        if (this.y > canvas.height + this.size) this.y = -this.size;\r\n        if (this.y < -this.size) this.y = canvas.height + this.size;\r\n      }\r\n      draw() {\r\n        const gradient = ctx.createRadialGradient(\r\n          this.x, this.y, 0,\r\n          this.x, this.y, this.size\r\n        );\r\n        gradient.addColorStop(0, `hsla(${this.hue}, 80%, 90%, ${this.opacity})`);\r\n        gradient.addColorStop(1, `hsla(${this.hue}, 80%, 90%, 0)`);\r\n        \r\n        ctx.fillStyle = gradient;\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n        ctx.fill();\r\n      }\r\n    }\r\n\r\n    // Light mode: Laser light lines\r\n    class LaserLine {\r\n      constructor() {\r\n        this.x1 = Math.random() * canvas.width;\r\n        this.y1 = Math.random() * canvas.height;\r\n        this.x2 = Math.random() * canvas.width;\r\n        this.y2 = Math.random() * canvas.height;\r\n        this.speedX1 = (Math.random() - 0.5) * 2;\r\n        this.speedY1 = (Math.random() - 0.5) * 2;\r\n        this.speedX2 = (Math.random() - 0.5) * 2;\r\n        this.speedY2 = (Math.random() - 0.5) * 2;\r\n        this.opacity = Math.random() * 0.3 + 0.1;\r\n        this.width = Math.random() * 3 + 1;\r\n        this.pulse = 0;\r\n        this.pulseSpeed = Math.random() * 0.05 + 0.02;\r\n      }\r\n      update() {\r\n        this.x1 += this.speedX1;\r\n        this.y1 += this.speedY1;\r\n        this.x2 += this.speedX2;\r\n        this.y2 += this.speedY2;\r\n        this.pulse += this.pulseSpeed;\r\n\r\n        if (this.x1 > canvas.width || this.x1 < 0) this.speedX1 *= -1;\r\n        if (this.y1 > canvas.height || this.y1 < 0) this.speedY1 *= -1;\r\n        if (this.x2 > canvas.width || this.x2 < 0) this.speedX2 *= -1;\r\n        if (this.y2 > canvas.height || this.y2 < 0) this.speedY2 *= -1;\r\n      }\r\n      draw() {\r\n        const pulseOpacity = this.opacity * (0.5 + 0.5 * Math.sin(this.pulse));\r\n        \r\n        const gradient = ctx.createLinearGradient(this.x1, this.y1, this.x2, this.y2);\r\n        gradient.addColorStop(0, `rgba(255, 182, 193, ${pulseOpacity})`);\r\n        gradient.addColorStop(0.5, `rgba(255, 192, 203, ${pulseOpacity * 1.5})`);\r\n        gradient.addColorStop(1, `rgba(255, 182, 193, ${pulseOpacity})`);\r\n\r\n        ctx.strokeStyle = gradient;\r\n        ctx.lineWidth = this.width;\r\n        ctx.lineCap = 'round';\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.x1, this.y1);\r\n        ctx.lineTo(this.x2, this.y2);\r\n        ctx.stroke();\r\n\r\n        ctx.shadowColor = 'rgba(255, 182, 193, 0.8)';\r\n        ctx.shadowBlur = 10;\r\n        ctx.stroke();\r\n        ctx.shadowBlur = 0;\r\n      }\r\n    }\r\n\r\n    const startTransition = () => {\r\n      isTransitioning = true;\r\n      fadeProgress = 0;\r\n      \r\n      // Smooth fade transition (slower for light mode)\r\n      const fadeStep = isDarkMode ? 0.02 : 0.012;\r\n      const fadeOut = () => {\r\n        fadeProgress += fadeStep;\r\n        if (fadeProgress < 1) {\r\n          requestAnimationFrame(fadeOut);\r\n        } else {\r\n          // Switch modes after fade out\r\n          if (isDarkMode) {\r\n            // Switch to dark mode\r\n            darkParticles = [];\r\n            for (let i = 0; i < 20; i++) {\r\n              darkParticles.push(new DarkParticle());\r\n            }\r\n            lightParticles = [];\r\n            laserLines = [];\r\n          } else {\r\n            // Switch to light mode\r\n            lightParticles = [];\r\n            for (let i = 0; i < 8; i++) {\r\n              lightParticles.push(new LightParticle());\r\n            }\r\n            laserLines = [];\r\n            for (let i = 0; i < 12; i++) {\r\n              laserLines.push(new LaserLine());\r\n            }\r\n            darkParticles = [];\r\n          }\r\n          \r\n          // Fade in new mode\r\n          fadeProgress = 1;\r\n          const fadeIn = () => {\r\n            fadeProgress -= fadeStep;\r\n            if (fadeProgress > 0) {\r\n              requestAnimationFrame(fadeIn);\r\n            } else {\r\n              isTransitioning = false;\r\n              fadeProgress = 0;\r\n            }\r\n          };\r\n          fadeIn();\r\n        }\r\n      };\r\n      fadeOut();\r\n    };\r\n\r\n    const init = () => {\r\n      darkParticles = [];\r\n      lightParticles = [];\r\n      laserLines = [];\r\n      \r\n      if (isDarkMode) {\r\n        // Dark mode: 20 white balls\r\n        for (let i = 0; i < 20; i++) {\r\n          darkParticles.push(new DarkParticle());\r\n        }\r\n      } else {\r\n        // Light mode: 8 pinkish orbs + 12 laser lines\r\n        for (let i = 0; i < 8; i++) {\r\n          lightParticles.push(new LightParticle());\r\n        }\r\n        for (let i = 0; i < 12; i++) {\r\n          laserLines.push(new LaserLine());\r\n        }\r\n      }\r\n    };\r\n    \r\n    const animate = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      \r\n      if (isDarkMode) {\r\n        // Dark mode background\r\n        ctx.fillStyle = '#0f172a';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n        \r\n        // Draw dark particles with fade effect\r\n        if (isTransitioning && fadeProgress < 0.5) {\r\n          // Fading out\r\n          const opacity = 1 - fadeProgress * 2;\r\n          ctx.globalAlpha = opacity;\r\n        } else if (isTransitioning && fadeProgress > 0.5) {\r\n          // Fading in\r\n          const opacity = (fadeProgress - 0.5) * 2;\r\n          ctx.globalAlpha = opacity;\r\n        }\r\n        \r\n        for (let i = 0; i < darkParticles.length; i++) {\r\n          darkParticles[i].update();\r\n          darkParticles[i].draw();\r\n        }\r\n      } else {\r\n        // Light mode background: soft pinkish pastel gradient\r\n        const gradient = ctx.createLinearGradient(0, 0, canvas.width, canvas.height);\r\n        gradient.addColorStop(0, '#fbeffb'); // very light pink\r\n        gradient.addColorStop(0.3, '#f8e1f4'); // pastel pink\r\n        gradient.addColorStop(0.7, '#f7e6f8'); // soft pink\r\n        gradient.addColorStop(1, '#fbeffb'); // very light pink\r\n        ctx.fillStyle = gradient;\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n        \r\n        // Draw light particles and lasers with fade effect\r\n        if (isTransitioning && fadeProgress < 0.5) {\r\n          // Fading out\r\n          const opacity = 1 - fadeProgress * 2;\r\n          ctx.globalAlpha = opacity;\r\n        } else if (isTransitioning && fadeProgress > 0.5) {\r\n          // Fading in\r\n          const opacity = (fadeProgress - 0.5) * 2;\r\n          ctx.globalAlpha = opacity;\r\n        }\r\n        \r\n        for (let i = 0; i < lightParticles.length; i++) {\r\n          lightParticles[i].update();\r\n          lightParticles[i].draw();\r\n        }\r\n        \r\n        for (let i = 0; i < laserLines.length; i++) {\r\n          laserLines[i].update();\r\n          laserLines[i].draw();\r\n        }\r\n      }\r\n      \r\n      ctx.globalAlpha = 1; // Reset alpha\r\n      animationId = requestAnimationFrame(animate);\r\n    };\r\n\r\n    // Check if mode changed and start smooth transition\r\n    if (previousMode !== isDarkMode) {\r\n      startTransition();\r\n      previousMode = isDarkMode;\r\n    }\r\n\r\n    resizeCanvas();\r\n    init();\r\n    animate();\r\n\r\n    window.addEventListener('resize', () => {\r\n        resizeCanvas();\r\n        init();\r\n    });\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', resizeCanvas);\r\n      if (animationId) {\r\n        cancelAnimationFrame(animationId);\r\n      }\r\n    };\r\n  }, [isDarkMode]);\r\n\r\n  return (\r\n    <div className=\"animated-background-container\">\r\n      <canvas ref={canvasRef} className=\"animated-background-canvas\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnimatedBackground; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}